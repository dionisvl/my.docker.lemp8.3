version: '3'
services:
  nginx:
    build:
      dockerfile: .docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "777:777"# test nginx
    volumes:
      - ./.docker/nginx/myTemplates:/etc/nginx/myTemplates
      # Copy all additional sites to Nginx container
      - ./.docker/nginx/sites:/etc/nginx/sites-enabled
      # For access to static sites directly(by nginx config)
      - /var/www:/var/www:rw
    environment:
      - APP_ENV=${APP_ENV:-dev}
      # Заменяет переменные окружения в шаблоне конфигурации Nginx, сохраняет результат в новый файл
    command: sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/myTemplates/${APP_ENV}.conf.template > /etc/nginx/sites-enabled/main.site.autogenerated.conf && nginx -g 'daemon off;'"

  php-fpm:
    build:
      dockerfile: .docker/php-fpm/Dockerfile
    volumes:
      - /var/www:/var/www:rw
      - ./app:/app
    environment:
      APP_ENV: ${APP_ENV}
      APP_URL: ${APP_URL}
      APP_SECRET: ${APP_SECRET}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
    depends_on:
      - db

  db:
    image: postgres:16.2-bookworm
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_lepp:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  db_lepp:
